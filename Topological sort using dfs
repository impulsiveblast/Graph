class Solution {
    public:
    
    void sort_it(vector<vector<int>>& adj,stack<int> &st,vector<int> &vis,int cur)
    {
        if(vis[cur]==0)
        {
            vis[cur]=1;
        }
        
        for(int i=0;i<adj[cur].size();i++)
        {
            if(vis[adj[cur][i]]==0)
            {
                sort_it(adj,st,vis,adj[cur][i]);
            }
        }
        
        st.push(cur);   //the element with no further eges unvisited then insert into stack
        return;
        
    }
    
  public:
    // Function to return list containing vertices in Topological order.
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code here
        
        vector<int> vis(adj.size(),0);
        stack<int> st;
        
        
        for(int i=0;i<adj.size();i++)
        {
            if(vis[i]==0)
            {
                sort_it(adj,st,vis,i);
            }
        }
        
        vector<int> v;
        
        while(st.size()!=0)
        {
            v.push_back(st.top());
            st.pop();
        }
        return v;
    }
};
