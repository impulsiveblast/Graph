class solution{
    public:
    vector<vector<char>> fill(int n,int m,vector<vector<char>> mat)
    {
        vector<vector<int>> vis(n,vector<int>(m,0)); //visited matrix for given O,X Matrix made
        
         //first and last row
             for(int j=0;j<m;j++)
             {
                 
                 if(mat[0][j]=='O' && !vis[0][j])
                 {
                     dfs(0,j,vis,mat);  //marks 1 to all 'O'

                 }
                 
                 if(mat[n-1][j]=='O' && !vis[n-1][j])
                 {
                     dfs(n-1,j,vis,mat);
                 }
             }
             
         //first and last column    
             for(int j=0;j<n;j++)
             {
                 if(mat[j][0]=='O' && !vis[0][j]) 
                 {
                     dfs(j,0,vis,mat); //marks 1 to all 'O'
                 }
                 
                 if(mat[j][m-1]=='O' && !vis[n-1][j])
                 {
                     dfs(j,m-1,vis,mat);
                 }
                 
             }
         
         for(int i=0;i<n;i++)
         {
             for(int j=0;j<m;j++)
             {
                 if(!vis[i][j] && mat[i][j]=='O')
                 {
                     mat[i][j]='X';
                 }
             }
         }
         
         
         
        
    }
}
    
